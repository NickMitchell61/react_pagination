{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","totalItems","itemsOnPage","selectedPage","changePage","totalTabs","Math","ceil","className","cn","disabled","href","onClick","map","item","active","selectPageOnTab","App","useState","setItemsOnPage","page","setPage","maxItems","startVisibleItems","endVisibleItems","visibleItems","slice","id","value","onChange","event","target","htmlFor","newPage","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEMC,EAAYC,KAAKC,KAAKN,EAAaC,GAkBzC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA2B,IAAjBP,IADZ,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBACmB,IAAjBR,EACI,OACA,QAENS,QA/Be,WACA,IAAjBT,GACFC,EAAWD,EAAe,IAoBxB,oBAcDT,EAAW,EAAGW,GAAWQ,KAAI,SAAAC,GAAI,OAChC,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQZ,IAAiBW,IAF7B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAnCK,SAACE,GACvBV,EAAWU,GAkCYE,CAAgBF,IAJjC,SAMGA,KAREA,MAYT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUP,IAAiBE,IAD7B,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBACER,IAAiBE,EACb,OACA,QAENO,QA5De,WACjBT,IAAiBE,GACnBD,EAAWD,EAAe,IAiDxB,wBCvEKc,EAAgB,WAC3B,IAGA,EAAsCC,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBiB,EAApB,KACA,EAAwBD,mBAHN,GAGlB,mBAAOE,EAAP,KAAaC,EAAb,KAEMC,EAAWF,EAAOlB,EAClBqB,EAAoBD,EAAWpB,EAC/BsB,EAAkBF,EARL,MAUfA,EAaEG,EAAe/B,EAtBH,EADC,IAwBhBgC,MAAMH,EAAmBC,GAE5B,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWY,EADX,mBAC0BG,EAAoB,EAD9C,cACqDC,EADrD,eA9Be,GA8Bf,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO1B,EACP2B,SA7BiB,SACzBC,GAEAX,GAAgBW,EAAMC,OAAOH,OAC7BP,EAfgB,IAmCV,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,WAxDa,GAyDbC,YAAaA,EACbC,aAAciB,EACdhB,WAxCa,SAAC6B,GAClBZ,EAAQY,MA0CN,6BACGR,EAAaZ,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YCrEjBoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.185cb3f7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  totalItems: number,\n  itemsOnPage: number,\n  selectedPage: number,\n  changePage: (page: number) => void,\n}\n\nexport const Pagination: FC<Props> = ({\n  totalItems,\n  itemsOnPage,\n  selectedPage,\n  changePage,\n}) => {\n  const totalTabs = Math.ceil(totalItems / itemsOnPage);\n\n  const selectPrevPage = () => {\n    if (selectedPage !== 1) {\n      changePage(selectedPage - 1);\n    }\n  };\n\n  const selectNextPage = () => {\n    if (selectedPage !== totalTabs) {\n      changePage(selectedPage + 1);\n    }\n  };\n\n  const selectPageOnTab = (item: number) => {\n    changePage(item);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: selectedPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={\n            selectedPage === 1\n              ? 'true'\n              : 'false'\n          }\n          onClick={selectPrevPage}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, totalTabs).map(item => (\n        <li\n          className={cn('page-item', {\n            active: selectedPage === item,\n          })}\n          key={item}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => selectPageOnTab(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', {\n        disabled: selectedPage === totalTabs,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={\n            selectedPage === totalTabs\n              ? 'true'\n              : 'false'\n          }\n          onClick={selectNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const totalItems = 42;\n  const firstPage = 1;\n\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [page, setPage] = useState(firstPage);\n\n  const maxItems = page * itemsOnPage;\n  const startVisibleItems = maxItems - itemsOnPage;\n  const endVisibleItems = maxItems > totalItems\n    ? totalItems\n    : maxItems;\n\n  const selectItemsPerPage = (\n    event: ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setItemsOnPage(+event.target.value);\n    setPage(firstPage);\n  };\n\n  const changePage = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const visibleItems = getNumbers(firstPage, totalItems)\n    .slice(startVisibleItems, endVisibleItems);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startVisibleItems + 1} - ${endVisibleItems} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={selectItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        totalItems={totalItems}\n        itemsOnPage={itemsOnPage}\n        selectedPage={page}\n        changePage={changePage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}